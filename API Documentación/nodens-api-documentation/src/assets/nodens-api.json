{
  "openapi" : "3.0.3",
  "info":{
    "title" : "Nodens API - Swagger UI",
    "description" : " This is the API Documentation for Nodens.\nAll the routes and Schemas can change until a first version of the proyect in production.Even this file.\nRepo Links:\n- [Nodens Backend](https://github.com/moises-ph/Nodens_Backend)\n- [Nodens Frontend](https://github.com/moises-ph/Nodens_Frontend)\n",
    "version" : "0.1.0",
    "termsOfService" : "http://swagger.io/terms/"
  },
  "tags" : [
    {
      "name" : "Auth",
      "description" : "Authentication Service in Nodens"
    },
    {
      "name" : "Musicians",
      "description" : "Service to Manage Musicians Service"
    },
    {
      "name" : "Organizers",
      "description" : "Service to Manage Organizers Service"
    },
    {
      "name" : "Offers",
      "description" : "Service to publish Offers and aplicate to them"
    }
  ],
  "components" : {
    "securitySchemes" : {
      "Authentication" : {
        "type" : "http",
        "scheme" : "basic"
      }
    }
  },
  "security" : [
    {
      "Authentication" : []
    }
  ],
  "paths" : {
    "/api/auth/login" : {
      "post" : {
        "tags" : ["Auth"],
        "summary" : "Log in Nodens",
        "description" : "Get Credentials for logining in Nodens",
        "operationId" : "login",
        "requestBody" : {
          "description" : "The requested data to Log In",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email" : { "type" : "string" },
                  "password" : { "type" : "string" }
                },
                "required" : ["email", "password"]
              },
              "examples" : {
                "user" : {
                  "summary" : "User Login example",
                  "value" : {
                    "email" : "you@email.com",
                    "password" : "yourStrongPassword"
                  }
                }
              }
            }
          },
          "required" : "true"
        },
        "responses" : {
          "200" : {
            "description" : "Succesful Login",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "token" : { "type" : "string" },
                    "verified" : { "type" : "boolean" },
                    "username" : { "type" : "string" }
                  },
                  "example" : {
                    "token" : "theAuthTokenGoesHere",
                    "verified" : "true",
                    "username" : "User1234"                  
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Wrong Password or an Unexpected Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "token" : { "type" : "string" },
                    "message" : { "type" : "string" }
                  },
                  "example" : {
                    "token" : "",
                    "message" : "Contraseña Incorrecta"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/renew" : {
      "put" : {
        "tags" : ["Auth"],
        "summary" : "Renew Authentication token",
        "description" : "Renew the token (The token expires at 15 minutes)",
        "operationId" : "tokenRenew",
        "parameters" : [
          {
            "name" : "token", 
            "in" : "query"
          }
        ],
        "responses" : {
          "401" : {
            "description" : "Invalid Cookies or Unexpected error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "token" : { "type" : ["string", "null"] },
                    "message" : { "type" : "string" }
                  },
                  "example" : {
                    "token" : "",
                    "message" : "Invalid Cookies"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/recovery/pre" : {
      "post" : {
        "tags" : ["Auth"],
        "summary" : "Recovery Password: 1° Step",
        "description" : "This is the first step to recovery the password, here you request a change to the password.\nThe system creates a session of 30 minutes to change the password, after that time the user will have to do the request another time",
        "operationId" : "recoveryPass1",
        "parameters" : [
          {
            "name" : "Email",
            "in" : "query"
          }
        ],
        "responses" : {
          "404" : {
            "description" : "The Email given was not found, the user doesn't exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : { "type" : "string" }
                  },
                  "example" : {
                    "Message" : "Usuario no registrado"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "No Email was sent or is invalid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : { "type" : "string" }
                  },
                  "example" :{
                    "Message" : "Email no válido"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unexpected Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : { "type" : "string" }
                  },
                  "example" :{
                    "Message" : "Some error"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Succesful request to recovery the password",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "guid" : { "type" : "string" },
                    "Email" : { "type" : "string" },
                    "email" : { "type" : "string" },
                    "source" : { "type" : "object" },
                    "timestamp" : { "type" : "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/recovery/request" : {
      "post" : {
        "tags" : ["Auth"],
        "summary" : "Recovery Password: 2° Step",
        "description" : "This is the second step to recovery the password, here you recieve the token to change the password.",
        "operationId" : "recoveryPass2",
        "parameters" : [
          {
            "name" : "gdusr",
            "in" : "query"
          },
          {
            "name" : "mn",
            "in" : "query"
          }
        ],
        "responses" : {
          "401" : {
            "description" : "The Session expired, the credentials ar not valid or an Unexpected Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "msg" : { "type" : "string" }
                  },
                  "example" : {
                    "msg" : "Url Expirada, por favor vuelva a pedir el restablecimiento de contraseña"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Succesful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "token" : { "type" : "string" },
                    "upResult" : { "type" : "string" }
                  },
                  "example" : {
                    "token" : "theRecoveryTokenGoesHere",
                    "upResult" : "thisIsTheResult.YouCanIgnoreIt"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/recovery/reset" : {
      "put" : {
        "tags" : ["Auth"],
        "summary" : "Recovery Password: 3° Step",
        "description" : "This is the las step, here you send the token given in the step before in the headers like an authentication, and send the password in the URL Query",
        "operationId" : "recoveryPass3",
        "parameters" : [
          {
            "name" : "pass",
            "in" : "query"
          }
        ],
        "responses" : {
          "404" : {
            "description" : "The URL Expired, the session is running up until the password changes (this step)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "msg" : { "type" : "string" }
                  },
                  "example" : {
                    "msg" : "Url expirada, por favor vuelva a pedir el restablecimiento de contraseña"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The step before wasn't done or the credentials are not valid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "msg" : { "type" : "string" }
                  },
                  "example" : {
                    "msg" : "Vuelva a solicitar el restablecimiento de su contraseña"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "There was an error tring to change the password (all the validations at this point are correct)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : { "type" : "string" }
                  },
                  "example" : {
                    "Message" : "Some error"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "The password where successfully changed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : { "type" : "string" }
                  },
                  "example" : {
                    "Message" : "Contraseña cambiada correctamente"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "There was an Unexpected Error during the process",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : { "type" : "string" }
                  },
                  "example" : {
                    "Message" : "Some Unexpected error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify" : {
      "put" : {
        "tags" : ["Auth"],
        "summary" : "Verify the Email",
        "description" : "This URL normally is sended to the email, but it's also in the response when the user get register in the platform. Here you send some credentials to validate the Email, the credentials expires in 1 hour",
        "operationId" : "verifyUser",
        "parameters" : [
          {
            "name" : "em",
            "in" : "query"
          },
          {
            "name" : "guid",
            "in" : "query"
          }
        ],
        "responses" : {
          "404" : {
            "description" : "The URL Expired, basically the credentials exired after 1 hour",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "Message" : { "type" : "string" }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Unexpected Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : { "type" : "string" }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Succesful Verification of the User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : { "type" : "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify/req" : {
      "post" : {
        "tags" : ["Auth"],
        "summary" : "Request a Verification for the Email",
        "description" : "Request a new Verification Link to Verify the User, usually this happens when the URL Sended when Register expires",
        "operationId" : "requestVerifyUser",
        "requestBody" : {
          "description" : "The Email for Request a Verification URL",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email" : { "type" : "string" }
                },
                "required" : ["email"]
              },
              "examples" : {
                "user" : {
                  "summary" : "An Email to verify",
                  "value" : {
                    "email" : "you@email.com"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "404" : {
            "description" : "The Email or the User doesn't exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : { "type" : "string" }
                  },
                  "example" : {
                    "Message" : "El usuario no existe, por favor regístrese"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Succesful Verification Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "url" : { "type" : "string", "description" : "The New URL to Verify" },
                    "Message" : { "type" : "string" }
                  },
                  "example" : {
                    "url" : "http://url.com/api/auth/verify?TheCredentials",
                    "Message" : "Verificación de email solicitada correctamente, vaya al enlace"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Unexpected Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : { "type" : "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user" : {
      "get" : {
        "tags" : ["Auth"],
        "summary" : "Get the information of the User",
        "description" : "Get the information of the User, you have to send Authentication token in Headers to get itfFFFFFFFFZ<",
        "security" : [
          {
            "Authentication" : []
          }
        ],
        "operationId" : "getuser",
        "response" : {
          "200" : {
            "description" : "The User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Email" : { "type" : "string" },
                    "userName" : { "type" : "string" },
                    "Rol" : { "type" : "string" },
                    "verified" : { "type" : "boolean" }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Unexpected Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : { "type" : "string" }
                  },
                  "example" : {
                    "Message" : "Some error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/Register" : {
      "post" : {
        "tags" : ["Auth"],
        "summary" : "Register in Nodens",
        "description" : "Route to register an User in Nodens, only required information to authenticate.",
        "operationId" : "register",
        "requestBody" : {
          "description" : "Requested data to register an User in Nodens, it requires a Rol that will determinate the rest of the information for the User.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email": { "type" : "string" },
                  "userName": { "type" : "string" },
                  "rol": { "type" : "string" },
                  "password": { "type" : "string" }
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Unexpected Error while saving the user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : { "type" : "string" }
                  },
                  "example" : {
                    "Message" : "Some error"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Succesful Register",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : { "type" : "string" },
                    "url" : { "type" : "string" }
                  },
                  "example" : {
                    "Message" : "Usuario registrado correctamente",
                    "url" : "hereGoesTheUrlToVerifyTheEmail"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Unexpected Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : { "type" : "string" }
                  },
                  "example" : {
                    "Message" : "Some error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/update" : {
      "put" : {
        "tags" : ["Auth"],
        "summary" : "Update User",
        "description" : "Update the User info, the Authentication token is required",
        "security" : [
          {
            "Authentication" : []
          }
        ],
        "operationId" : "updateUser",
        "requestBody" : {
          "description" : "The Information for Update",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "userName" : { "type" : "string" },
                  "OldEmail" : { "type" : "string", "description" : "The old email used for the user" },
                  "NewEmail" : { "type" : "string", "description" : "The new email for the user, if the user doesn't want to change his Email, this field can be the same or null" }
                }
              },
              "examples" : {
                "userName" : "newUserName12345",
                "OldEmail" : "something@email.com",
                "NewEmail" : "newemail@email.com"
              }
            }
          }
        }
      }
    },
    "/musician/all" : {
      "get" : {
        "tags" : ["Musicians"],
        "summary" : "Get all Musicians",
        "description" : "All Musicians in platform",
        "responses" : {
          "200" : {
            "description" : "Succesful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "IdAuth" : { "type" : "integer", "description" : "ID in the Auth Service"  },
                    "Name" :  { "type" : "string", "description" : "Name of the Musician"  },
                    "Lastname" : { "type" : "string", "description" : "Lastname of the Musician"  },
                    "fecha_nacimiento" : { "type" : "string", "format" : "date" ,"description" : "Date of birth of the Musician"  },
                    "instrumentos" : { 
                      "type" : "array", 
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "nombre" : { "type" : "string", "description" : "The name of the instrument"},
                          "nivel" : { "type" : "string", "description" : "A description of the Musician's level on that one instrument"}
                        }
                      },
                      "description" : "An array of the Instruments that the Musician knows to play"
                    },
                    "genero" : { "type" : "string", "description" : "The gender of the Musician"  },
                    "descripcion" : { "type" : "string", "description" : "A description of the Musician"  },
                    "generosMusicales" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      },
                      "description" : "An array with the Musician genres that the Musician knows to play"
                    },
                    "pais" : { "type" : "string", "description" : "Country of the Musician"  },
                    "ciudad" : { "type" : "string", "description" : "City of the Musician"  },
                    "experiencia" : { "type" : "string", "description" : "A Description of the general experience in Music of the Musician"  },
                    "educacion" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "nombre" : { "type" : "string", "description" : "Name of the degree"},
                          "institucion" : { "type" : "string", "description" : "Name of the institutin where the Musician did the degree"  },
                          "fecha_inicio" : { "type" : "string", "format" : "date", "description" : "Date when the Musician started to study the degree"  },
                          "fecha_fin" : { "type" : "string", "format" : "date", "description" : "Date when the Musician finished the degree" }
                        }
                      }
                    },
                    "url_foto_perfil" : { "type" : "string", "description" : "URL for the profile img of the Musician"},
                    "url_video_presentacion" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      },
                      "description" : "An Array with the url for the videos of the Musician"
                    },
                    "redes_sociales" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "nombre" : { "type" : "string" , "description" : "Name of the Social media" },
                          "url" : { "type" : "string", "description" : "URL to the Social Media" }
                        }
                      },
                      "description" : "An Array with the url for the videos of the Musician"
                    },
                    "telefono" : { "type" : "string" , "description" : "Phone of the Musician" }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}